#BlueJ class context
comment0.target=VehicleWorld
comment0.text=\r\n\ VehicleWorld\ is\ the\ main\ game\ world\ for\ the\ Greenfoot\ simulation\ involving\r\n\ vehicles\ and\ pedestrians.\ This\ world\ includes\ lane\ management,\ vehicle\r\n\ spawning,\ and\ interaction\ between\ various\ game\ objects\ such\ as\ vehicles,\r\n\ sheep,\ and\ wolves.\r\n\ \r\n\ Key\ Features\:\ \r\n\ -\ Switch\ lane\:\ with\ a\ collasion\ detector\r\n\ -\ when\ sheeps\ (pedestrian)\ collade\ with\ each\ other\ they\ will\ move\ apart\r\n\ -\ When\ "click\ here"\ is\ clicked,\ there\ will\ be\ "red\ wolves"\ spawn\ the\ hits\ the\ Wolf\r\n\ -\ Night\ Mode\ after\ a\ certain\ amount\ of\ time\r\n\ -\ Some\ sheep\ have\ extra\ blood\r\n\ -\ After\ a\ certain\ amount\ of\ sheep\ dies,\ super\ vehicle\ will\ be\ spawned\ to\ revise\ all\ the\ sheep\r\n\ \r\n\ This\ class\ manages\ the\ overall\ game\ environment\ and\ core\ game\ loop\ actions.\r\n\ \r\n\ \r\n\ Credits\:\r\n\ \r\n\ LambChop.png\ -\ Creative\ Power\ Entertaining,\ Pleasant\ Goat\ and\ Big\ Big\ Wolf\ S1\ EP1\r\n\ RoastedLamb.png\ -\ Creative\ Power\ Entertaining,\ Pleasant\ Goat\ and\ Big\ Big\ Wolf\ S1\ EP1\r\n\ ShabuMutton.png\ -\ Creative\ Power\ Entertaining,\ Pleasant\ Goat\ and\ Big\ Big\ Wolf\ S1\ EP1\r\n\ SuperVehicle.png\ -\ Me\r\n\ download.png\ -\ ChunRiChiovo,\ DuiTang\r\n\ background.png\ -\ Jwb123,\ HuijiWiki\r\n\ DayRoad.png\ -\ brgfx,\ freepix\r\n\ NightRoad.png\ -\ upklyak,\ freepix\r\n\ LanyangYang.png\ -\ SweetStatic,\ DuiTang\r\n\ XiYangYang.png\ -\ SweetStatic,\ DuiTang\r\n\ ManYangYang.png\ -\ SweetStatic,\ DuiTang\r\n\ MeiYangYang.png\ -\ SweetStatic,\ DuiTang\r\n\ HuiTaiLang.png\ -\ SweetStatic,\ DuiTang\r\n\ XiaoHuiHui.png\ -\ SweetStatic,\ DuiTang\r\n\ JiaoTaiLang.png\ -\ SweetStatic,\ DuiTang\r\n\ RedWolf.png\ -\ Wangzimu0723,\ HuijiWiki\r\n\ RedWolf2.png\ -\ Creative\ Power\ Entertaining,\ Pleasant\ Goat\ and\ Big\ Big\ Wolf\:\ Joys\ of\ Seasons|\ EP\ 04\ 3\:24\r\n\ Minus.png\ -\ Pinterest\r\n\ \r\n\ DaySound.mp3\ -\ mixkit.co\r\n\ NightSound.mp3\ -\ mixkit.co\r\n\ Slap.mp3\ -\ \ Alex_Jauk,\ pixabay\r\n\ mie.mp3\ -\ zapsplat\r\n\ eat.mp3\ -\ zapsplat\r\n\ vehicle.mp3\ -\ zapsplat\r\n\ revise.mp3\ -\ Pixabay,\ Pixabay\r\n\ Click.mp3\ -\ zapsplat\r\n\r\n
comment1.params=
comment1.target=VehicleWorld()
comment1.text=\r\n\ Constructor\ for\ VehicleWorld.\ Initializes\ the\ world\ settings,\ sets\ up\r\n\ lanes,\ and\ configures\ the\ background.\ The\ constructor\ is\ executed\ when\r\n\ the\ program\ starts\ or\ when\ the\ world\ is\ reset.\r\n
comment10.params=
comment10.target=void\ spawn()
comment10.text=\r\n\ Spawns\ regular\ vehicles\ and\ sheep\ in\ the\ world.\ This\ is\ the\ default\r\n\ spawning\ mechanism.\ Vehicles\ are\ spawned\ in\ lanes,\ while\ sheep\ are\r\n\ spawned\ either\ at\ the\ top\ or\ bottom\ pedestrian\ zones.\r\n\ \r\n\ There\ are\ different\ types\ of\ vehicles\ (Wolf,\ LittleWolf,\ BananaWolf),\ and\r\n\ similarly,\ sheep\ can\ be\ of\ different\ types\ (SmartSheep,\ CuteSheep,\r\n\ SlowSheep,\ PrettySheep),\ which\ spawn\ randomly\ in\ their\ respective\ zones.\r\n
comment11.params=lane
comment11.target=int\ getLaneY(int)
comment11.text=\r\n\ Given\ a\ lane\ number\ (zero-indexed),\ return\ the\ y\ position\ in\ the\ centre\r\n\ of\ the\ lane.\ (doesn't\ factor\ offset,\ so\ watch\ your\ offset,\ i.e.\ with\r\n\ Bus).\r\n\ \r\n\ @param\ lane\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ lane\ number\ (zero-indexed)\r\n\ @return\ int\ the\ y\ position\ of\ the\ lane's\ center,\ or\ -1\ if\ invalid\r\n
comment12.params=y
comment12.target=int\ getLane(int)
comment12.text=\r\n\ Given\ a\ y-position,\ return\ the\ lane\ number\ (zero-indexed).\ Note\ that\ the\r\n\ y-position\ must\ be\ valid,\ and\ you\ should\ include\ the\ offset\ in\ your\r\n\ calculations\ before\ calling\ this\ method.\ For\ example,\ if\ a\ Bus\ is\ in\ a\r\n\ lane\ at\ y\=100,\ but\ is\ offset\ by\ -20,\ it\ is\ actually\ in\ the\ lane\ located\r\n\ at\ y\=80,\ so\ you\ should\ send\ 80\ to\ this\ method,\ not\ 100.\r\n\ \r\n\ @param\ y\r\n\ \ \ \ \ \ \ \ \ \ \ \ -\ the\ y\ position\ of\ the\ lane\ the\ Vehicle\ is\ in\r\n\ @return\ int\ the\ lane\ number,\ zero-indexed\r\n\ \r\n
comment13.params=world\ target\ spawners\ startY\ heightPerLane\ lanes\ spacing\ twoWay\ centreSplit\ centreSpacing\ background
comment13.target=int[]\ prepareLanes(greenfoot.World,\ greenfoot.GreenfootImage,\ VehicleSpawner[],\ int,\ int,\ int,\ int,\ boolean,\ boolean,\ int,\ greenfoot.GreenfootImage)
comment13.text=\r\n\ Prepares\ the\ lanes\ for\ the\ world,\ calculates\ lane\ positions,\ places\r\n\ vehicle\ spawners,\ and\ draws\ lane\ lines\ and\ backgrounds\ based\ on\ traffic\r\n\ flow\ type\ (one-way,\ two-way,\ etc.).\r\n\ \r\n\ This\ method\ is\ highly\ flexible,\ supporting\ different\ configurations\ for\r\n\ traffic\ lanes\:\ -\ Two-way\ traffic,\ with\ or\ without\ a\ central\ split.\ -\r\n\ One-way\ traffic.\ -\ Configurable\ lane\ heights,\ spacings,\ and\ center\r\n\ spacing.\r\n\ \r\n\ The\ spawners\ are\ vehicle\ generators\ placed\ on\ each\ lane,\ and\ the\ method\r\n\ also\ handles\ the\ graphical\ drawing\ of\ lane\ lines\ (yellow\ for\ center\r\n\ dividers\ and\ white\ for\ lane\ dividers).\r\n\ \r\n\ @param\ world\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ Greenfoot\ world\ in\ which\ the\ lanes\ and\ spawners\ will\ be\r\n\ \ \ \ \ \ \ \ \ \ \ \ placed.\r\n\ @param\ target\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ GreenfootImage\ used\ for\ drawing\ the\ lane\ backgrounds\ and\r\n\ \ \ \ \ \ \ \ \ \ \ \ dividers.\r\n\ @param\ spawners\r\n\ \ \ \ \ \ \ \ \ \ \ \ An\ array\ of\ VehicleSpawner\ objects,\ one\ for\ each\ lane.\r\n\ @param\ startY\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ starting\ Y-coordinate\ for\ the\ first\ lane.\r\n\ @param\ heightPerLane\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ height\ of\ each\ lane.\r\n\ @param\ lanes\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ total\ number\ of\ lanes\ to\ create.\r\n\ @param\ spacing\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ space\ between\ lanes.\r\n\ @param\ twoWay\r\n\ \ \ \ \ \ \ \ \ \ \ \ Whether\ the\ lanes\ should\ be\ for\ two-way\ traffic.\r\n\ @param\ centreSplit\r\n\ \ \ \ \ \ \ \ \ \ \ \ Whether\ the\ lanes\ should\ have\ a\ central\ split\ (used\ for\r\n\ \ \ \ \ \ \ \ \ \ \ \ two-way\ traffic).\r\n\ @param\ centreSpacing\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ spacing\ in\ the\ center\ (for\ two-way,\ center-split\ roads).\r\n\ @param\ background\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ background\ image\ for\ the\ road.\r\n\ \r\n\ @return\ int[]\ Returns\ an\ array\ of\ Y\ positions\ for\ each\ lane.\r\n
comment14.params=
comment14.target=void\ stopped()
comment14.text=\r\n\ Method\ when\ world\ is\ paused\ that\ will\ stop\ the\ background\ music\r\n
comment15.params=actorsToSort\ world
comment15.target=void\ zSort(java.util.ArrayList,\ greenfoot.World)
comment15.text=\r\n\ A\ z-sort\ method\ which\ will\ sort\ Actors\ so\ that\ Actors\ that\ are\ displayed\r\n\ "higher"\ on\ the\ screen\ (lower\ y\ values)\ will\ show\ up\ underneath\ Actors\r\n\ that\ are\ drawn\ "lower"\ on\ the\ screen\ (higher\ y\ values),\ creating\ a\ better\r\n\ perspective.\r\n
comment16.params=world\ target\ spawners\ startY\ heightPerLane\ lanes\ spacing\ twoWay\ centreSplit\ image
comment16.target=int[]\ prepareLanes(greenfoot.World,\ greenfoot.GreenfootImage,\ VehicleSpawner[],\ int,\ int,\ int,\ int,\ boolean,\ boolean,\ greenfoot.GreenfootImage)
comment16.text=\r\n\ <p>\r\n\ The\ prepareLanes\ method\ is\ a\ static\ (standalone)\ method\ that\ takes\ a\ list\r\n\ of\ parameters\ about\ the\ desired\ roadway\ and\ then\ builds\ it.\r\n\ </p>\r\n\ \r\n\ <p>\r\n\ <b>Note\:</b>\ So\ far,\ Centre-split\ is\ the\ only\ option,\ regardless\ of\ what\r\n\ values\ you\ send\ for\ that\ parameters.\r\n\ </p>\r\n\r\n\ <p>\r\n\ This\ method\ does\ three\ things\:\r\n\ </p>\r\n\ <ul>\r\n\ <li>Determines\ the\ Y\ coordinate\ for\ each\ lane\ (each\ lane\ is\ centered\r\n\ vertically\ around\ the\ position)</li>\r\n\ <li>Draws\ lanes\ onto\ the\ GreenfootImage\ target\ that\ is\ passed\ in\ at\ the\r\n\ specified\ /\ calculated\ positions.\ (Nothing\ is\ returned,\ it\ just\r\n\ manipulates\ the\ object\ which\ affects\ the\ original).</li>\r\n\ <li>Places\ the\ VehicleSpawners\ (passed\ in\ via\ the\ array\ parameter\r\n\ spawners)\ into\ the\ World\ (also\ passed\ in\ via\ parameters).</li>\r\n\ </ul>\r\n\ \r\n\ <p>\r\n\ After\ this\ method\ is\ run,\ there\ is\ a\ visual\ road\ as\ well\ as\ the\ objects\r\n\ needed\ to\ spawn\ Vehicles.\ Examine\ the\ table\ below\ for\ an\ in-depth\r\n\ description\ of\ what\ the\ roadway\ will\ look\ like\ and\ what\ each\r\n\ parameter/component\ represents.\r\n\ </p>\r\n\ \r\n\ <pre>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <\=\=\=\ Start\ Y\r\n\ \ ||||||||||||||\ \ <\=\=\=\ Top\ Border\r\n\ \ /------------\\\r\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\ \ \r\n\ \ |\ \ \ \ \ \ Y[0]\ \ |\ \ <\=\=\=\ Lane\ Position\ (Y)\ is\ the\ middle\ of\ the\ lane\r\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\r\n\ \ \\------------/\r\n\ \ [\#\#]\ [\#\#]\ [\#\#|\ <\=\=\ spacing\ (\ where\ the\ lane\ lines\ or\ borders\ are\ )\r\n\ \ /------------\\\r\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\ \ \r\n\ \ |\ \ \ \ \ \ Y[1]\ \ |\r\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\r\n\ \ \\------------/\r\n\ \ ||||||||||||||\ \ <\=\=\ Bottom\ Border\r\n\ </pre>\r\n\ \r\n\ @param\ world\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ World\ that\ the\ VehicleSpawners\ will\ be\ added\ to\r\n\ @param\ target\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ GreenfootImage\ that\ the\ lanes\ will\ be\ drawn\ on,\ usually\r\n\ \ \ \ \ \ \ \ \ \ \ \ but\ not\ necessarily\ the\ background\ of\ the\ World.\r\n\ @param\ spawners\r\n\ \ \ \ \ \ \ \ \ \ \ \ An\ array\ of\ VehicleSpawner\ to\ be\ added\ to\ the\ World\r\n\ @param\ startY\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ top\ Y\ position\ where\ lanes\ (drawing)\ should\ start\r\n\ @param\ heightPerLane\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ height\ of\ the\ desired\ lanes\r\n\ @param\ lanes\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ total\ number\ of\ lanes\ desired\r\n\ @param\ spacing\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ distance,\ in\ pixels,\ between\ each\ lane\r\n\ @param\ twoWay\r\n\ \ \ \ \ \ \ \ \ \ \ \ Should\ traffic\ flow\ both\ ways?\ Leave\ false\ for\ a\ one-way\r\n\ \ \ \ \ \ \ \ \ \ \ \ street\ (Not\ Yet\ Implemented)\r\n\ @param\ centreSplit\r\n\ \ \ \ \ \ \ \ \ \ \ \ Should\ the\ whole\ road\ be\ split\ in\ the\ middle?\ Or\ lots\ of\r\n\ \ \ \ \ \ \ \ \ \ \ \ parallel\ two-way\ streets?\ Must\ also\ be\ two-way\ street\ (twoWay\r\n\ \ \ \ \ \ \ \ \ \ \ \ \=\=\ true)\ or\ else\ NO\ EFFECT\r\n\ \r\n
comment2.params=
comment2.target=void\ switchBackground()
comment2.text=\r\n\ Switch\ between\ day\ and\ night\ mode.\ This\ method\ will\ change\ the\ background\r\n\ image\ and\ redraw\ the\ lanes\ with\ the\ appropriate\ road\ image\ (day\ or\ night)\r\n\ depending\ on\ the\ current\ mode.\r\n
comment3.params=
comment3.target=int\ getLaneHeight()
comment3.text=\r\n\ Gets\ the\ height\ of\ a\ single\ lane.\r\n\ \r\n\ @return\ the\ height\ of\ a\ lane,\ which\ is\ a\ fixed\ value\ of\ 48.\r\n
comment4.params=
comment4.target=int\ getLaneSpace()
comment4.text=\r\n\ Gets\ the\ space\ between\ lanes.\r\n\ \r\n\ @return\ the\ space\ between\ lanes,\ which\ is\ a\ fixed\ value\ of\ 8.\r\n
comment5.params=lane
comment5.target=VehicleSpawner\ getOrigin(int)
comment5.text=\r\n\ Retrieves\ the\ VehicleSpawner\ object\ for\ a\ specified\ lane.\ This\ method\ is\r\n\ useful\ for\ switching\ lanes\r\n\ \r\n\ @param\ lane\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ lane\ index\ for\ which\ to\ retrieve\ the\ VehicleSpawner.\r\n\ @return\ the\ VehicleSpawner\ object\ associated\ with\ the\ specified\ lane.\r\n
comment6.params=
comment6.target=void\ act()
comment6.text=\r\n\ This\ method\ is\ called\ continuously\ during\ each\ frame\ (or\ act\ cycle)\ of\r\n\ the\ game.\ It\ handles\ the\ main\ game\ logic\ such\ as\ sound,\ spawning\r\n\ vehicles,\ checking\ conditions\ for\ events\ like\ spawning\ super\ vehicles,\r\n\ switching\ background\ themes,\ and\ handling\ mouse\ input.\ The\ method\ also\r\n\ ensures\ that\ actors\ are\ sorted\ by\ Z-order\ for\ proper\ visual\ layering\ on\r\n\ the\ screen.\r\n
comment7.params=
comment7.target=void\ changeRedMode()
comment7.text=\r\n\ Toggles\ the\ red\ mode\ on\ or\ off.\ Red\ mode\ is\ responsible\ for\ spawning\r\n\ RedWolves.\ When\ activated,\ regular\ vehicle\ spawning\ is\ overridden\ and\r\n\ only\ red\ wolves\ appear.\r\n
comment8.params=
comment8.target=void\ redSpawn()
comment8.text=\r\n\ Spawns\ red\ wolves\ (in\ red\ mode)\ on\ the\ road\ as\ pedestrians.\ Two\ types\ of\r\n\ wolves\ are\ spawned\:\ regular\ Wolves\ and\ RedWolves.\ Regular\ Wolves\ spawn\r\n\ randomly\ in\ lanes,\ while\ RedWolves\ spawn\ randomly\ at\ the\ top\ or\ bottom\r\n\ pedestrian\ zones.\r\n
comment9.params=
comment9.target=void\ spawnSuperVehicle()
comment9.text=\r\n\ Spawns\ a\ "SuperVehicle"\ in\ all\ lanes\ that\ are\ clear.\ This\ method\r\n\ overrides\ the\ default\ vehicle\ spawn\ and\ only\ happens\ when\ a\ specific\r\n\ event\ condition\ is\ met\ (when\ `sheepDeadCounter\ >\=\ 3`).\ Once\ this\ happens,\r\n\ no\ regular\ vehicles\ will\ spawn\ until\ this\ event\ is\ over.\r\n\ \r\n\ Each\ lane's\ spawner\ is\ checked\ for\ the\ presence\ of\ another\ vehicle,\ and\r\n\ if\ clear,\ a\ SuperVehicle\ is\ added\ to\ that\ lane.\r\n
numComments=17
